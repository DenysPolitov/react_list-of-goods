{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","startApp","setState","reverseList","changeSortType","value","resetOrder","this","visibleGoods","goods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,EAOEC,SAAW,WACT,EAAKC,UAAS,SAACN,GAAD,MAAY,CAAEC,WAAYD,EAAMC,eARlD,EAWEM,YAAc,WACZ,EAAKD,UAAS,SAACN,GAAD,MAAY,CAAEE,YAAaF,EAAME,gBAZnD,EAeEM,eAAiB,SAACC,GAChB,EAAKH,SAAS,CAAEH,SAAUM,KAhB9B,EAmBEC,WAAa,WACX,EAAKJ,SAAS,CAAEJ,YAAY,EAAOC,SAAU,KApBjD,4CAuBE,WAAU,IAAD,OACP,EAA4CQ,KAAKX,MAAzCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAEzBS,EAxDV,SACEC,EACAV,EACAD,GAEA,IAAMU,EAAY,YAAOC,GAEzB,OAAQV,GACN,KAAMN,EAASiB,QACbF,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACxD,MACF,KAAMpB,EAASsB,OACbP,EAAaG,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAS7D,OAJIlB,GACFU,EAAaS,UAGRT,EAoCHU,CAAkBxB,EAAiBK,EAAUD,GAE/C,OACE,qBAAKqB,UAAU,MAAf,SACGtB,EAEG,qCACE,wBACEuB,KAAK,SACLC,QAAS,kBAAM,EAAKjB,eAAeX,EAASiB,UAF9C,iCAOA,wBACEU,KAAK,SACLC,QAAS,kBAAM,EAAKjB,eAAeX,EAASsB,SAF9C,4BAOA,wBACEK,KAAK,SACLC,QAAS,kBAAM,EAAKlB,eAFtB,qBAOA,wBACEiB,KAAK,SACLC,QAAS,kBAAM,EAAKf,cAFtB,mBAOA,oBAAIa,UAAU,QAAd,SACGX,EAAac,KACZ,SAAAC,GAAI,OAAI,oBAAIJ,UAAU,cAAd,SAAwCI,GAAPA,WAM/C,wBACEH,KAAK,SACLC,QAAS,kBAAM,EAAKpB,YAFtB,yBAtEZ,GAAyBuB,IAAMC,WCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.19c72aac.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { NONAME } from 'dns';\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case (SortType.ALPABET):\n      visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n      break;\n    case (SortType.LENGTH):\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  startApp = () => {\n    this.setState((state) => ({ isStarted: !state.isStarted }));\n  };\n\n  reverseList = () => {\n    this.setState((state) => ({ isReversed: !state.isReversed }));\n  };\n\n  changeSortType = (value: SortType) => {\n    this.setState({ sortType: value });\n  };\n\n  resetOrder = () => {\n    this.setState({ isReversed: false, sortType: 0 });\n  };\n\n  render() {\n    const { isStarted, isReversed, sortType } = this.state;\n\n    const visibleGoods\n    = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n    return (\n      <div className=\"App\">\n        {isStarted\n          ? (\n            <>\n              <button\n                type=\"button\"\n                onClick={() => this.changeSortType(SortType.ALPABET)}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => this.changeSortType(SortType.LENGTH)}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => this.reverseList()}\n              >\n                Reverse\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => this.resetOrder()}\n              >\n                Reset\n              </button>\n\n              <ul className=\"Goods\">\n                {visibleGoods.map(\n                  good => <li className=\"Goods__item\" key={good}>{good}</li>,\n                )}\n              </ul>\n            </>\n          )\n          : (\n            <button\n              type=\"button\"\n              onClick={() => this.startApp()}\n            >\n              Start\n            </button>\n          )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}